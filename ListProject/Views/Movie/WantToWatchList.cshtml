@{
    Layout = "_Layout";
}
@using ListProject.Models.User;
﻿@using Microsoft.AspNetCore.Identity
@model ListProject.ViewModels.WantToWatchListViewModel
@inject UserManager<User> UserManager

<style>
    .table-custom td, .table-custom th {
        vertical-align: middle;
    }

    .movie-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: flex-start;
    }

    .movie-card {
        border: 1px solid #ddd;
        border-radius: 10px;
        margin: 10px;
        padding: 10px;
        text-align: center;
        width: 250px;
        height: 550px;
        background-color: #f0f8ff;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .movie-info {
        height: 60px;
        overflow: hidden;
    }

        .movie-info h3 {
            margin: 0;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

    .movie-poster {
        width: 100%;
        height: 350px;
        margin-top: 10px;
    }

    .movie-info h3.too-long {
        font-size: 13px;
    }

    .movie-actions {
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        margin-top: auto;
    }

    .button-container {
        display: flex;
        justify-content: space-between;
    }

    .movie-actions button {
        width: calc(50% - 5px);
        margin-top: 5px;
    }

    .movie-actions .deleteMovie {
        margin-top: 10px;
    }

    .btn {
        margin: 5px;
    }

    .btn-info {
        color: white !important;
    }

    .gray-button {
        background-color: #888 !important;
        color: #ededed !important;
    }
</style>

<div class="app-content content">
    <div class="content-wrapper">
        <div class="content-body">
            <div class="card box-shadow-2 radius-1">
                <div class="card-body" style="padding-top:35px;">
                    <div style="text-align: center; display: flex; align-items: center; justify-content: center; margin-bottom:35px">
                        <hr style="width: 30%;">
                        <h4 style="margin: 0 20px;"><b>@Model.User.Email Want to Watch List</b></h4>
                        <hr style="width: 30%;">
                    </div>
                    <div id="movies" class="movie-container">
                        @foreach (var movie in Model.Movies)
                        {
                            <div class="movie-card">
                                <div class="movie-info">
                                    @{
                                        var titleClass = movie.Name.Length > 13 ? "too-long" : "";
                                    }
                                    <h3 class="@titleClass"><b>@movie.Name</b></h3>
                                    <span>@movie.Year</span>
                                    <span>IMDb: @movie.Score</span>
                                </div>
                                <img src="data:image/jpeg;base64,@Convert.ToBase64String(movie.ImageData)" alt="@movie.Name" class="movie-poster" />
                                <div class="movie-actions">
                                    <div class="button-container">
                                        @{
                                            var movieInWatchedList = false;
                                            if(Model.WatchedList != null && Model.WatchedList.Count != 0)
                                            {
                                                movieInWatchedList = Model.WatchedList.Any(w => w.MovieId == movie.Id);
                                            }
                                            var user = await UserManager.GetUserAsync(User);
                                            if (user != null && user.Id == Model.User.Id)
                                            {
                                                <button class="btn btn-sm gray-button" disabled>Want to Watch</button>
                                                <button class="btn btn-sm addToWatchedList @(movieInWatchedList ? "gray-button disabled" : "btn-primary")" data-movie-id="@movie.Id">Watched</button>
                                            }
                                        }
                                    </div>
                                    <div class="text-center mt-auto">
                                        <button class="btn btn-sm btn-danger removeMovie" data-movie-id="@movie.Id">Remove</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<script>
    $(document).ready(function () {

        $('.removeMovie').on('click', function () {

            var movieId = $(this).data('movie-id');

            $.ajax({
                type: "POST",
                url: "/Movie/RemoveMovieFromWTW",
                data: { movieId: movieId },
                success: function (res) {
                    if (res.isSuccess == true) {
                        swal({
                            title: res.message,
                            icon: "success",
                            text: " ",
                            timer: 2000,
                            buttons: false
                        });
                        setTimeout(function () {
                            window.location.reload();
                        }, 2200);
                    }
                    else if (res.isSuccess == false) {
                        swal({
                            title: res.message,
                            icon: "error",
                            text: " ",
                            timer: 1000,
                            buttons: false
                        });
                    }
                }
            });
        });

        $('.addToWatchedList').on('click', function () {

            var movieId = $(this).data('movie-id');

            $.ajax({
                type: "POST",
                url: "/Movie/AddToWatchedList",
                data: { movieId: movieId },
                success: function (res) {
                    if (res.isSuccess == true) {
                        swal({
                            title: res.message,
                            icon: "success",
                            text: " ",
                            timer: 2000,
                            buttons: false
                        });
                        setTimeout(function () {
                            window.location.reload();
                        }, 2200);
                    }
                    else if (res.isSuccess == false) {
                        swal({
                            title: res.message,
                            icon: "error",
                            text: " ",
                            timer: 1000,
                            buttons: false
                        });
                    }
                }
            });
        });

    });
</script>
